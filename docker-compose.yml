---

# source: https://github.com/O-X-L/dmarc-analyzer
# see also: https://github.com/domainaware/parsedmarc

# CHANGE:
#   the OPENSEARCH_INITIAL_ADMIN_PASSWORD
#   the '$PWD' to your actual paths
#   the UID/GID of opensearch & grafana to the one that can write to the data directory (also in the dockerfiles)

networks:
  dmarc:
    driver: 'bridge'

services:
  opensearch:
    build:
      context: .
      dockerfile: 'Dockerfile_opensearch'
    hostname: 'opensearch'
    user: '8800:8800'
    environment:
      UID: 8800
      GID: 8800
      OPENSEARCH_JAVA_OPTS: '-Xms512m -Xmx2048m'
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: '6uxhQDXRU!rNcEjJ!5ar0F'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - '$PWD/data/opensearch:/usr/share/opensearch/data'
      - '$PWD/log4j2.properties:/usr/share/opensearch/config/log4j2.properties'
      - '$PWD/opensearch.yml:/usr/share/opensearch/config/opensearch.yml'
    ports:
      - '127.0.0.1:9200:9200'
    healthcheck:
        test: ['CMD', 'curl', '-f', 'http://localhost:9200']
        interval: 5s
        timeout: 2s
        retries: 20
    restart: 'unless-stopped'
    networks:
      - 'dmarc'

  parsedmarc:
    build:
      context: .
      dockerfile: 'Dockerfile_parsedmarc'
      network: 'host'
    volumes:
      - '$PWD/parsedmarc.ini:/dmarc/parsedmarc.ini:ro'
      # - '$PWD/credentials.json:/dmarc/credentials.json:ro'
      # - '$PWD/geoip.mmdb:/dmarc/geoip.mmdb:ro'
    depends_on:
      opensearch:
        condition: 'service_healthy'
    restart: 'unless-stopped'
    networks:
      - 'dmarc'

  # todo: disable telemetry via '--disable-reporting' flag
  grafana:
    build:
      context: .
      dockerfile: 'Dockerfile_grafana'
    ports:
      - '3000:3000'
    user: '8800:8800'
    environment:
      UID: 8800
      GID: 8800
      GF_INSTALL_PLUGINS: 'grafana-opensearch-datasource'
      GF_AUTH_ANONYMOUS_ENABLED: 'false'
      GF_LOG_LEVEL: 'error'
    volumes:
      - '$PWD/data/grafana:/var/lib/grafana'
    restart: 'unless-stopped'
    depends_on:
      opensearch:
        condition: 'service_healthy'
    networks:
      - 'dmarc'
